$date
	Mon Feb 06 16:12:53 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_bench $end
$var wire 16 ! sum [15:0] $end
$var wire 1 " cout $end
$var wire 1 # OF $end
$var reg 16 $ a [15:0] $end
$var reg 16 % b [15:0] $end
$var reg 1 & cin $end
$var reg 1 ' control $end
$var reg 1 ( sign $end
$scope module c $end
$var wire 16 ) A [15:0] $end
$var wire 16 * B [15:0] $end
$var wire 1 & Ci $end
$var wire 1 # OF $end
$var wire 16 + b_temp1 [15:0] $end
$var wire 16 , b_temp2 [15:0] $end
$var wire 16 - b_temp3 [15:0] $end
$var wire 16 . c [15:0] $end
$var wire 16 / c_not [15:0] $end
$var wire 1 ' control $end
$var wire 1 0 of_temp1 $end
$var wire 1 1 of_temp2 $end
$var wire 1 2 of_temp3 $end
$var wire 1 3 of_temp4 $end
$var wire 16 4 op3 [15:0] $end
$var wire 1 5 s_not $end
$var wire 1 ( sign $end
$var wire 16 6 sum [15:0] $end
$var wire 16 7 op2 [15:0] $end
$var wire 1 8 dummy $end
$var wire 4 9 cp1 [3:0] $end
$var wire 4 : cp [3:0] $end
$var wire 3 ; carry1 [2:0] $end
$var wire 3 < carry [2:0] $end
$var wire 1 " Co $end
$scope module cla1 $end
$var wire 4 = A [3:0] $end
$var wire 4 > B [3:0] $end
$var wire 1 ? Ci $end
$var wire 1 @ Co $end
$var wire 1 A Cp $end
$var wire 4 B temp [3:0] $end
$var wire 4 C sum [3:0] $end
$var wire 4 D carry [3:0] $end
$var wire 4 E P [3:0] $end
$var wire 4 F G [3:0] $end
$upscope $end
$scope module cla2 $end
$var wire 4 G A [3:0] $end
$var wire 4 H B [3:0] $end
$var wire 1 I Ci $end
$var wire 1 J Co $end
$var wire 1 K Cp $end
$var wire 4 L temp [3:0] $end
$var wire 4 M sum [3:0] $end
$var wire 4 N carry [3:0] $end
$var wire 4 O P [3:0] $end
$var wire 4 P G [3:0] $end
$upscope $end
$scope module cla3 $end
$var wire 4 Q A [3:0] $end
$var wire 4 R B [3:0] $end
$var wire 1 S Ci $end
$var wire 1 T Co $end
$var wire 1 U Cp $end
$var wire 4 V temp [3:0] $end
$var wire 4 W sum [3:0] $end
$var wire 4 X carry [3:0] $end
$var wire 4 Y P [3:0] $end
$var wire 4 Z G [3:0] $end
$upscope $end
$scope module cla4 $end
$var wire 4 [ A [3:0] $end
$var wire 4 \ B [3:0] $end
$var wire 1 ] Ci $end
$var wire 1 8 Co $end
$var wire 1 ^ Cp $end
$var wire 4 _ temp [3:0] $end
$var wire 4 ` sum [3:0] $end
$var wire 4 a carry [3:0] $end
$var wire 4 b P [3:0] $end
$var wire 4 c G [3:0] $end
$upscope $end
$scope module cla5 $end
$var wire 4 d A [3:0] $end
$var wire 4 e B [3:0] $end
$var wire 1 & Ci $end
$var wire 1 f Co $end
$var wire 1 g Cp $end
$var wire 4 h temp [3:0] $end
$var wire 4 i sum [3:0] $end
$var wire 4 j carry [3:0] $end
$var wire 4 k P [3:0] $end
$var wire 4 l G [3:0] $end
$upscope $end
$scope module cla6 $end
$var wire 4 m A [3:0] $end
$var wire 4 n B [3:0] $end
$var wire 1 o Ci $end
$var wire 1 p Co $end
$var wire 1 q Cp $end
$var wire 4 r temp [3:0] $end
$var wire 4 s sum [3:0] $end
$var wire 4 t carry [3:0] $end
$var wire 4 u P [3:0] $end
$var wire 4 v G [3:0] $end
$upscope $end
$scope module cla7 $end
$var wire 4 w A [3:0] $end
$var wire 4 x B [3:0] $end
$var wire 1 y Ci $end
$var wire 1 z Co $end
$var wire 1 { Cp $end
$var wire 4 | temp [3:0] $end
$var wire 4 } sum [3:0] $end
$var wire 4 ~ carry [3:0] $end
$var wire 4 !" P [3:0] $end
$var wire 4 "" G [3:0] $end
$upscope $end
$scope module cla8 $end
$var wire 4 #" A [3:0] $end
$var wire 4 $" B [3:0] $end
$var wire 1 %" Ci $end
$var wire 1 " Co $end
$var wire 1 &" Cp $end
$var wire 4 '" temp [3:0] $end
$var wire 4 (" sum [3:0] $end
$var wire 4 )" carry [3:0] $end
$var wire 4 *" P [3:0] $end
$var wire 4 +" G [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
0&"
0%"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
0{
0z
0y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
0q
0p
0o
b0 n
b0 m
b10 l
b1 k
b100 j
b101 i
b0 h
0g
0f
b11 e
b10 d
b0 c
b1111 b
b0 a
b1111 `
b0 _
0^
0]
b0 \
b1111 [
b0 Z
b1111 Y
b0 X
b1111 W
b0 V
0U
0T
0S
b0 R
b1111 Q
b0 P
b1111 O
b0 N
b1111 M
b0 L
0K
0J
0I
b0 H
b1111 G
b0 F
b1100 E
b1 D
b1101 C
b0 B
0A
0@
1?
b0 >
b1100 =
b0 <
b0 ;
b0 :
b0 9
08
b1111111111111101 7
b101 6
15
b11 4
03
02
01
00
b1111111111111111 /
b0 .
b0 -
b1111111111111100 ,
b11 +
b11 *
b10 )
0(
0'
0&
b11 %
b10 $
0#
0"
b101 !
$end
#20000
1#
12
11
10
b11 D
1"
b1 B
b1110 C
b111111111111110 7
b111 `
b1000 +"
b100 j
b101 i
b101 !
b101 6
b0 ("
b1101 E
b111 b
b10 e
b1000 $"
b10 l
b1 k
b0 *"
b1000000000000010 4
b1101 =
b111 [
b1000000000000010 +
b111111111111101 ,
b11 d
b1000 #"
b1000000000000010 %
b1000000000000010 *
b1000000000000011 $
b1000000000000011 )
#40000
1&"
b1111 '"
b1111 )"
1{
1%"
1z
b1111 |
b1111 ~
1q
1y
1p
b1111 r
b1110 :
0g
b1111 t
1#
1o
12
b111 <
1f
b0 s
b0 }
01
10
b1 D
b110 j
b10 h
1"
b1000 ("
b1111 u
b1111 !"
b0 B
b1001 C
b1111111111111001 7
b1111 `
b1001 l
b1000 +"
b111 *"
b1000000000000100 !
b1000000000000100 6
b100 i
b1111 n
b1111 x
b1000 E
b1111 b
b1001 e
b1111 $"
b10 k
b0 /
b1111111111111001 -
b1111111111111001 4
b1000 =
b1111 [
b1111111111111111 .
b0 +
b1111111111111000 ,
b1011 d
1'
b111 %
b111 *
b1000000000001011 $
b1000000000001011 )
#60000
0q
0{
b0 :
0&"
03
0y
0%"
01
00
0p
b0 ~
0z
b0 )"
0"
b0 r
b0 s
b0 |
b0 }
b0 '"
b0 h
b0 t
b1111111111111101 7
b1101 C
0o
b0 u
b0 !"
b100 j
b0 <
0f
b101 i
b101 !
b101 6
b0 ("
b1100 E
b11 e
b0 n
b0 x
b0 $"
b10 l
b1 k
b0 +"
b0 *"
b11 +
b11 4
0#
b1100 =
b1111111111111111 /
b0 -
02
b1111111111111100 ,
b10 d
b0 #"
b0 .
05
b11 %
b11 *
b10 $
b10 )
0'
1(
#80000
1#
13
11
b1000 :
1&"
b11 D
b1000 )"
b1 B
b1110 C
b1011111111111110 7
b1011 `
b100 +"
b100 j
b101 i
b1000000000000101 !
b1000000000000101 6
b1000 ("
b1101 E
b1011 b
b10 e
b100 $"
b10 l
b1 k
b0 *"
b100000000000010 4
b1101 =
b1011 [
b100000000000010 +
b1011111111111101 ,
b11 d
b100 #"
b100000000000010 %
b100000000000010 *
b100000000000011 $
b100000000000011 )
#100000
0#
1q
1{
03
b1111 :
1g
1y
1%"
01
10
1o
b1111 t
1p
b1111 ~
1z
b1111 )"
1"
b111 <
1f
b10 C
b0 M
b0 W
b10 7
b0 `
b1111 v
b1111 ""
b1111 +"
b1000 j
b0 h
b1011 i
b1111 s
b1111 }
b1111111111111011 !
b1111111111111011 6
b1111 ("
b1 E
b0 O
b0 Y
b0 b
b1110 e
b1111 n
b1111 x
b1111 $"
b1100 l
b11 k
b0 u
b0 !"
b0 *"
b1111111111111110 4
b1 =
b0 G
b0 Q
b0 [
b1111111111111110 +
b1 ,
b1101 d
b1111 m
b1111 w
b1111 #"
b1111111111111110 %
b1111111111111110 *
b1111111111111101 $
b1111111111111101 )
#120000
1#
13
11
b1 D
0q
0{
b1 :
0&"
b0 B
b11 C
b1111 M
b1111 W
b111111111110011 7
b111 `
0o
0y
0%"
b1000 j
0f
b11 i
b0 t
0p
b0 r
b0 s
b0 ~
b0 <
0z
b0 |
b0 }
b0 )"
b0 '"
b11 !
b11 6
b0 ("
b10 E
b1111 O
b1111 Y
b111 b
b1101 e
b0 n
b0 x
b1000 $"
b100 l
b1011 k
b0 v
b0 u
b0 ""
b0 !"
b1000 +"
b0 *"
b1000000000001101 4
b10 =
b1111 G
b1111 Q
b111 [
b1000000000001101 +
b111111111110010 ,
b110 d
b0 m
b0 w
b1000 #"
b1000000000001101 %
b1000000000001101 *
b1000000000000110 $
b1000000000000110 )
#140000
0#
b1111 s
b1111 }
03
b0 M
b0 W
b11 7
b0 `
01
00
b1111 u
b1111 !"
0"
b1111111111110011 !
b1111111111110011 6
b1111 ("
b0 O
b0 Y
b0 b
b1111 n
b1111 x
b1111 $"
b0 +"
b1111 *"
b1111111111111101 4
b0 G
b0 Q
b0 [
b1111111111111101 +
b10 ,
b0 #"
b1111111111111101 %
b1111111111111101 *
b110 $
b110 )
#160000
b0 :
0g
b0 s
b0 }
b0 ("
b0 u
b0 !"
b0 *"
b0 h
b0 t
b1 7
b1 C
0o
b0 n
b0 x
b0 $"
b10 j
b0 <
0f
b1110 !
b1110 6
b1110 i
b0 E
b1 e
b1 l
b1100 k
b0 /
b1 -
b1 4
b0 =
b1111111111111111 .
b0 +
b0 ,
b1101 d
1'
b1111111111111111 %
b1111111111111111 *
b1101 $
b1101 )
#180000
b1 '"
1{
1%"
1z
b1111 |
b1111 ~
1q
1y
1p
1#
13
11
1&"
b1111 r
b0 s
b0 }
b1111 )"
b1111 t
b1111 :
1g
1o
b1111 u
b1111 !"
b110 +"
b111 <
1f
b11 e
b1111 n
b1111 x
b111 $"
b111111111110011 4
b111111111110011 -
b11 C
b1111 M
b1111 W
b111111111110011 7
b111 `
b1100 j
b1100 h
b1001 i
b1110000000001001 !
b1110000000001001 6
b1110 ("
b10 E
b1111 O
b1111 Y
b111 b
b10 l
b101 k
b1 *"
b10 =
b1111 G
b1111 Q
b111 [
b111111111110010 ,
b110 d
b110 #"
b1000000000001101 %
b1000000000001101 *
b110000000000110 $
b110000000000110 )
#200000
